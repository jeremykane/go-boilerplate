// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/worker/init.go

// Package worker is a generated GoMock package.
package worker

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockworker is a mock of worker interface.
type Mockworker struct {
	ctrl     *gomock.Controller
	recorder *MockworkerMockRecorder
}

// MockworkerMockRecorder is the mock recorder for Mockworker.
type MockworkerMockRecorder struct {
	mock *Mockworker
}

// NewMockworker creates a new mock instance.
func NewMockworker(ctrl *gomock.Controller) *Mockworker {
	mock := &Mockworker{ctrl: ctrl}
	mock.recorder = &MockworkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockworker) EXPECT() *MockworkerMockRecorder {
	return m.recorder
}

// GenerateWorkerParameters mocks base method.
func (m *Mockworker) GenerateWorkerParameters() []JobParameter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateWorkerParameters")
	ret0, _ := ret[0].([]JobParameter)
	return ret0
}

// GenerateWorkerParameters indicates an expected call of GenerateWorkerParameters.
func (mr *MockworkerMockRecorder) GenerateWorkerParameters() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateWorkerParameters", reflect.TypeOf((*Mockworker)(nil).GenerateWorkerParameters))
}
